package com.techfun.job.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class JobCategoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table job_category
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table job_category
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table job_category
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public JobCategoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table job_category
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andJobCategoryIdIsNull() {
            addCriterion("job_category_id is null");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdIsNotNull() {
            addCriterion("job_category_id is not null");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdEqualTo(Integer value) {
            addCriterion("job_category_id =", value, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdNotEqualTo(Integer value) {
            addCriterion("job_category_id <>", value, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdGreaterThan(Integer value) {
            addCriterion("job_category_id >", value, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("job_category_id >=", value, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdLessThan(Integer value) {
            addCriterion("job_category_id <", value, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("job_category_id <=", value, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdIn(List<Integer> values) {
            addCriterion("job_category_id in", values, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdNotIn(List<Integer> values) {
            addCriterion("job_category_id not in", values, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdBetween(Integer value1, Integer value2) {
            addCriterion("job_category_id between", value1, value2, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("job_category_id not between", value1, value2, "jobCategoryId");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameIsNull() {
            addCriterion("job_category_name is null");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameIsNotNull() {
            addCriterion("job_category_name is not null");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameEqualTo(String value) {
            addCriterion("job_category_name =", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameNotEqualTo(String value) {
            addCriterion("job_category_name <>", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameGreaterThan(String value) {
            addCriterion("job_category_name >", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameGreaterThanOrEqualTo(String value) {
            addCriterion("job_category_name >=", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameLessThan(String value) {
            addCriterion("job_category_name <", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameLessThanOrEqualTo(String value) {
            addCriterion("job_category_name <=", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameLike(String value) {
            addCriterion("job_category_name like", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameNotLike(String value) {
            addCriterion("job_category_name not like", value, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameIn(List<String> values) {
            addCriterion("job_category_name in", values, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameNotIn(List<String> values) {
            addCriterion("job_category_name not in", values, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameBetween(String value1, String value2) {
            addCriterion("job_category_name between", value1, value2, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andJobCategoryNameNotBetween(String value1, String value2) {
            addCriterion("job_category_name not between", value1, value2, "jobCategoryName");
            return (Criteria) this;
        }

        public Criteria andCreateDtIsNull() {
            addCriterion("create_dt is null");
            return (Criteria) this;
        }

        public Criteria andCreateDtIsNotNull() {
            addCriterion("create_dt is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDtEqualTo(Date value) {
            addCriterionForJDBCDate("create_dt =", value, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtNotEqualTo(Date value) {
            addCriterionForJDBCDate("create_dt <>", value, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtGreaterThan(Date value) {
            addCriterionForJDBCDate("create_dt >", value, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_dt >=", value, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtLessThan(Date value) {
            addCriterionForJDBCDate("create_dt <", value, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_dt <=", value, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtIn(List<Date> values) {
            addCriterionForJDBCDate("create_dt in", values, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtNotIn(List<Date> values) {
            addCriterionForJDBCDate("create_dt not in", values, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_dt between", value1, value2, "createDt");
            return (Criteria) this;
        }

        public Criteria andCreateDtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_dt not between", value1, value2, "createDt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table job_category
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table job_category
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}